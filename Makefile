help:  ## Show help
	@grep -E '^[.a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Clean autogenerated files
	rm -rf dist
	find . -type f -name "*.DS_Store" -ls -delete
	find . | grep -E "(__pycache__|\.pyc|\.pyo)" | xargs rm -rf
	find . | grep -E ".pytest_cache" | xargs rm -rf
	find . | grep -E ".ipynb_checkpoints" | xargs rm -rf
	rm -f .coverage

venv: ## Makes the venv
	uv venv
	uv sync --all-extras

format: ## Run pre-commit hooks
	uv run pre-commit run -a

test: ## Run pytest
	uv run pytest -v --cov

type: ## Run pyright
	uv run pyright

run: format test type ## Run all workflow

# -----------------
#  Docker Settings
# -----------------

ENABLE_GPU   ?= true
ENABLE_AUDIO ?= true

# Compose files
BASE_COMPOSE  := -f docker/base.yml
GPU_COMPOSE   := -f docker/gpu.yml
AUDIO_COMPOSE := -f docker/audio.yml

# -f options
COMPOSE_FILES := $(BASE_COMPOSE)
ifeq ($(ENABLE_GPU),true)
  COMPOSE_FILES += $(GPU_COMPOSE)
endif
ifeq ($(ENABLE_AUDIO),true)
  COMPOSE_FILES += $(AUDIO_COMPOSE)
endif

docker-build: ## Build docker images
	docker compose -f docker/base.yml build --no-cache

docker-up: ## Start docker containers (ENABLE_GPU=false for no gpu env, ENABLE_AUDIO=false for no audio server env)
	@echo "â†’ Starting dev container (GPU=$(ENABLE_GPU), AUDIO=$(ENABLE_AUDIO))"
	docker compose $(COMPOSE_FILES) up -d

docker-down: ## Stop docker containers
	docker compose -f docker/base.yml down

docker-down-volume:  ## Stop docker containers with removing volumes.
	docker compose -f docker/base.yml down -v

docker-attach: ## Attach to development container
	docker compose -f docker/base.yml exec dev bash
